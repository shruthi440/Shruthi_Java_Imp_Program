// Source code is decompiled from a .class file using FernFlower decompiler.
package com.collections.www;

import java.util.Stack;

public class Balanced {
   public Balanced() {
   }

   void method() {
      String str = "{[()]}";
      Stack<Character> stack = new Stack();
      char[] var6;
      int var5 = (var6 = str.toCharArray()).length;

      for(int var4 = 0; var4 < var5; ++var4) {
         char ch = var6[var4];
         if (ch != '{' && ch != '[' && ch != '(') {
            if (ch == '}' && !stack.empty() && (Character)stack.peek() == '}') {
               stack.pop();
            } else if (ch == ']' && !stack.empty() && (Character)stack.peek() == '[') {
               stack.pop();
            } else if (ch == ')' && !stack.empty() && (Character)stack.peek() == '(') {
               stack.pop();
            }
         } else {
            stack.push(ch);
         }
      }

      if (stack.isEmpty()) {
         System.out.println("It is balanced");
      } else {
         System.out.println("It is not balanced");
      }

   }

   public static void main(String[] args) {
      Balanced b = new Balanced();
      b.method();
   }
}
